#if !canImport(ObjectiveC)
import XCTest

extension ChordDescriptorTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__ChordDescriptorTests = [
        ("testFirstInversion", testFirstInversion),
        ("testInitAPI", testInitAPI),
        ("testInversionRootPosition", testInversionRootPosition),
        ("testSecondInversion", testSecondInversion),
        ("testThirdInversion", testThirdInversion),
    ]
}

extension ChordTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__ChordTests = [
        ("testCMajor", testCMajor),
        ("testFSharpMinor", testFSharpMinor),
        ("testInitAPI", testInitAPI),
        ("testIntervalPattern", testIntervalPattern),
    ]
}

extension CompoundDiatonicIntervalTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__CompoundDiatonicIntervalTests = [
        ("testAddEqualToOctave", testAddEqualToOctave),
        ("testAddLessThanAnOctave", testAddLessThanAnOctave),
        ("testAddMoreThanAnOctave", testAddMoreThanAnOctave),
        ("testIdentity", testIdentity),
        ("testOctaveSubtractingCompoundInterval", testOctaveSubtractingCompoundInterval),
        ("testSubtractNoOctaveDisplacement", testSubtractNoOctaveDisplacement),
        ("testSubtractWithOctaveDisplacement", testSubtractWithOctaveDisplacement),
    ]
}

extension DiatonicIntervalTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__DiatonicIntervalTests = [
        ("testAbsoluteNamedIntervalOrdinalInversion", testAbsoluteNamedIntervalOrdinalInversion),
        ("testAPI", testAPI),
        ("testAPIShouldNotCompile", testAPIShouldNotCompile),
        ("testAugmentedSemitones", testAugmentedSemitones),
        ("testCommutativity", testCommutativity),
        ("testDiminishedSemitones", testDiminishedSemitones),
        ("testDoubleAugmentedThirdDoubleDiminishedSixth", testDoubleAugmentedThirdDoubleDiminishedSixth),
        ("testIdentity", testIdentity),
        ("testInverse", testInverse),
        ("testInversionMajorSecondMinorSeventh", testInversionMajorSecondMinorSeventh),
        ("testInversionMajorThirdMinorSixth", testInversionMajorThirdMinorSixth),
        ("testInversionPerfectFifthPerfectFourth", testInversionPerfectFifthPerfectFourth),
        ("testPerfectOrdinalFourthFifthInverse", testPerfectOrdinalFourthFifthInverse),
        ("testPerfectOrdinalUnisonInverse", testPerfectOrdinalUnisonInverse),
        ("testSecondOrdinalInverseSeventh", testSecondOrdinalInverseSeventh),
    ]
}

extension FrequencyTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__FrequencyTests = [
        ("testInitIntLiteral", testInitIntLiteral),
    ]
}

extension IntervalQualityTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__IntervalQualityTests = [
        ("testInverseDimAug", testInverseDimAug),
        ("testInverseMinorMajor", testInverseMinorMajor),
        ("testInversePerfect", testInversePerfect),
    ]
}

extension NoteNumberTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__NoteNumberTests = [
        ("testNoteNumberInit", testNoteNumberInit),
    ]
}

extension PitchClassDyadTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__PitchClassDyadTests = [
        ("testEquality", testEquality),
        ("testEqualityNotEqual", testEqualityNotEqual),
        ("testOrderedIntervalCrossOver", testOrderedIntervalCrossOver),
        ("testOrderedIntervalEasy", testOrderedIntervalEasy),
    ]
}

extension PitchClassIntervalTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__PitchClassIntervalTests = [
        ("testInit", testInit),
    ]
}

extension PitchClassSetTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__PitchClassSetTests = [
        ("testEquality", testEquality),
    ]
}

extension PitchClassTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__PitchClassTests = [
        ("testAdd", testAdd),
        ("testAssociativity", testAssociativity),
        ("testIdentity", testIdentity),
        ("testInverse", testInverse),
        ("testPitchClass", testPitchClass),
        ("testPitchClassInitFloatGreaterThan12", testPitchClassInitFloatGreaterThan12),
        ("testPitchClassInitFloatLessThan12", testPitchClassInitFloatLessThan12),
        ("testPitchClassInitIntGreaterThan12", testPitchClassInitIntGreaterThan12),
        ("testPitchClassInitIntLessThan12", testPitchClassInitIntLessThan12),
        ("testPitchClassInitWithFloat", testPitchClassInitWithFloat),
        ("testSubtract", testSubtract),
    ]
}

extension PitchDyadTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__PitchDyadTests = [
        ("testEqualityFalseHigherNotEqual", testEqualityFalseHigherNotEqual),
        ("testEqualityFalseLowerNotEqual", testEqualityFalseLowerNotEqual),
        ("testEqualityFalseNeitherEqual", testEqualityFalseNeitherEqual),
        ("testEqualityTrue", testEqualityTrue),
        ("testInitOrdered", testInitOrdered),
        ("testInterval", testInterval),
    ]
}

extension PitchIntervalTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__PitchIntervalTests = [
        ("testEquatable", testEquatable),
        ("testInit", testInit),
    ]
}

extension PitchSegmentTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__PitchSegmentTests = [
        ("testNormalFormSinglePitch", testNormalFormSinglePitch),
        ("testNormalFormWrapping", testNormalFormWrapping),
        ("testPrimeForm", testPrimeForm),
        ("testPrimeFormsEqual", testPrimeFormsEqual),
    ]
}

extension PitchSetTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__PitchSetTests = [
        ("testDyads", testDyads),
        ("testPitchClassSet", testPitchClassSet),
    ]
}

extension PitchTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__PitchTests = [
        ("testFloatMinusPitch", testFloatMinusPitch),
        ("testFloatPlusPitch", testFloatPlusPitch),
        ("testInit", testInit),
        ("testPitchAdditiveMonoid", testPitchAdditiveMonoid),
        ("testPitchMinusFloat", testPitchMinusFloat),
        ("testPitchPlusFloat", testPitchPlusFloat),
    ]
}

extension ScaleTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__ScaleTests = [
        ("testInitAPI", testInitAPI),
        ("testMajor", testMajor),
        ("testMelodicMinor", testMelodicMinor),
        ("testPitchFromScaleDegree0", testPitchFromScaleDegree0),
        ("testPitchFromScaleDegree3", testPitchFromScaleDegree3),
        ("testPitchFromScaleDegree9", testPitchFromScaleDegree9),
        ("testPitchFromScaleDegreeNotNil", testPitchFromScaleDegreeNotNil),
        ("testScaleDegree", testScaleDegree),
        ("testScaleDegreeNil", testScaleDegreeNil),
        ("testScaleDegreeNotNil", testScaleDegreeNotNil),
        ("testScaleSequenceLooping", testScaleSequenceLooping),
    ]
}

extension UnorderedDiatonicIntervalTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__UnorderedDiatonicIntervalTests = [
        ("testAddUnison", testAddUnison),
        ("testIdentity", testIdentity),
    ]
}

public func __allTests() -> [XCTestCaseEntry] {
    return [
        testCase(ChordDescriptorTests.__allTests__ChordDescriptorTests),
        testCase(ChordTests.__allTests__ChordTests),
        testCase(CompoundDiatonicIntervalTests.__allTests__CompoundDiatonicIntervalTests),
        testCase(DiatonicIntervalTests.__allTests__DiatonicIntervalTests),
        testCase(FrequencyTests.__allTests__FrequencyTests),
        testCase(IntervalQualityTests.__allTests__IntervalQualityTests),
        testCase(NoteNumberTests.__allTests__NoteNumberTests),
        testCase(PitchClassDyadTests.__allTests__PitchClassDyadTests),
        testCase(PitchClassIntervalTests.__allTests__PitchClassIntervalTests),
        testCase(PitchClassSetTests.__allTests__PitchClassSetTests),
        testCase(PitchClassTests.__allTests__PitchClassTests),
        testCase(PitchDyadTests.__allTests__PitchDyadTests),
        testCase(PitchIntervalTests.__allTests__PitchIntervalTests),
        testCase(PitchSegmentTests.__allTests__PitchSegmentTests),
        testCase(PitchSetTests.__allTests__PitchSetTests),
        testCase(PitchTests.__allTests__PitchTests),
        testCase(ScaleTests.__allTests__ScaleTests),
        testCase(UnorderedDiatonicIntervalTests.__allTests__UnorderedDiatonicIntervalTests),
    ]
}
#endif
